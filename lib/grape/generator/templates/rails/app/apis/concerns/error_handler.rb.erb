module <%= config[:app][:name_classify] %>
  class Error < StandardError; end 
  class AuthenticationFailed < Error; end 
  class PermissionDenied < Error; end 
  class TooMenyRequests < Error; end 
  class ResourceNotFound < Error; end 

  ERROR_MAPPING = { 
    Grape::Exceptions::ValidationErrors   => 400,
    Grape::Exceptions::InvalidMessageBody => 400,
    ActiveRecord::RecordInvalid           => 400,
    AuthenticationFailed                  => 401,
    PermissionDenied                      => 403,
    ResourceNotFound                      => 404,
    ActiveRecord::RecordNotFound          => 404,
    TooMenyRequests                       => 429 
  }   

  module ErrorHandler
    extend ActiveSupport::Concern

    included do
      rescue_from :all do |e| 
        code = ERROR_MAPPING[e.class] || 500 
        if code == 500 && ENV["RACK_ENV"] != "production"
          raise e
        else
          error!({reason: Rack::Utils::HTTP_STATUS_CODES[code]}, code)
        end 
      end
    end
  end 
end
